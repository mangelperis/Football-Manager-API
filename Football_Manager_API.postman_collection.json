{
	"info": {
		"_postman_id": "61ca5c5f-ab21-4bec-9e8d-587e373988d0",
		"name": "Football Manager API",
		"description": "**OBJETIVO.**  \nRealizar una mini-aplicación con la tecnología que prefieras API Rest que gestione  \nclubes, jugadores y entrenadores.\n\n  \n**DESCRIPCIÓN.**  \nSobre estos modelos (clubes, jugadores y entrenadores) se deberán de poder  \nrealizar las siguientes operaciones:\n\n  \n**CLUBES**  \n— Dar de alta un club.  \n— Dar de alta un jugador en el club.  \n— Dar de alta un entrenador en el club.  \n— Modificar el presupuesto de un club.  \n— Dar de baja un jugador del club.  \n— Dar de baja un entrenador del club.  \n— Listar jugadores de un club con posibilidad de filtrar por una de las propiedades  \n(por ejemplo nombre) y con paginación.\n\n  \n**JUGADORES**  \n— Dar de alta un jugador sin pertenecer a un club.\n\n  \n**ENTRENADORES**  \n— Dar de alta un entrenador sin pertenecer a un club.  \nCada club deberá de tener un presupuesto, este presupuesto se asignará en el alta  \ndel club.\n\n  \n**NOTAS**  \nAl dar de alta un jugador/entrenador a un club se deberá especificar el salario del  \njugador/entrenador para ese club, ese salario debe de salir del presupuesto del club  \ny el presupuesto nunca puede ser menor que cero.  \nAl modificar el presupuesto de un club se tiene que tener en cuenta los salarios  \nactuales de ese club.  \nUn jugador/entrenador no podrá estar dado de alta en más de un club.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32997224"
	},
	"item": [
		{
			"name": "Player",
			"item": [
				{
					"name": "CreatePlayer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Ballesteros\",\n  \"position\": \"D\",\n  \"email\": \"balle@lud.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/api/player",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"player"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "DeletePlayer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/api/player/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"player",
								"1"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			],
			"description": "JUGADORES  \n— Dar de alta un jugador sin pertenecer a un club.\n\nExtra: Borrar un jugador de la BDD"
		},
		{
			"name": "Coach",
			"item": [
				{
					"name": "CreateCoach",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Manolo Preciado\",\n  \"role\": \"Head\",\n  \"email\": \"manolo@lud.es\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/api/coach",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"coach"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "DeleteCoach",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/api/coach/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"coach",
								"1"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			],
			"description": "ENTRENADORES\n\n— Dar de alta un entrenador sin pertenecer a un club.\n\nExtra: Borrar entrenador de la BDD"
		},
		{
			"name": "Club",
			"item": [
				{
					"name": "Manage Players",
					"item": [
						{
							"name": "GetClubPlayers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost/api/club/1/players?page=1&limit=2&name=Ronaldo",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"path": [
										"api",
										"club",
										"1",
										"players"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "name",
											"value": "Ronaldo"
										}
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "AttachPlayerToClub",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"playerId\": 1,\n    \"salary\" : 1000.0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost/api/club/1/player",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"path": [
										"api",
										"club",
										"1",
										"player"
									]
								},
								"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
							},
							"response": []
						},
						{
							"name": "RemovePlayerFromClub",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful DELETE request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost/api/player/1/club",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"path": [
										"api",
										"player",
										"1",
										"club"
									]
								},
								"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
							},
							"response": []
						}
					]
				},
				{
					"name": "Manage Coaches",
					"item": [
						{
							"name": "GetClubCoaches",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost/api/club/1/coaches?page=1&limit=1&name=Ancelotti",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"path": [
										"api",
										"club",
										"1",
										"coaches"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "1"
										},
										{
											"key": "name",
											"value": "Ancelotti"
										}
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "AttachCoachToClub",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"coachId\": 1,\n    \"salary\" : 4000.0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost/api/club/1/coach",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"path": [
										"api",
										"club",
										"1",
										"coach"
									]
								},
								"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
							},
							"response": []
						},
						{
							"name": "RemoveCoachFromClub",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful DELETE request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost/api/coach/1/club",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"path": [
										"api",
										"coach",
										"1",
										"club"
									]
								},
								"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
							},
							"response": []
						}
					]
				},
				{
					"name": "CreateClub",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Levante UD\",\n  \"shortname\": \"LUD\",\n  \"country\": \"ES\",\n  \"budget\": 150000000,\n  \"email\": \"info@lud.es\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/api/club",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"club"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "UpdateClubBudget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"budget\":300000000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/api/club/1/budget",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"club",
								"1",
								"budget"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "FetchClubDetails",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost/api/club/1/details",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"club",
								"1",
								"details"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			],
			"description": "CLUBES  \n— Dar de alta un club.  \n— Dar de alta un jugador en el club.  \n— Dar de alta un entrenador en el club.  \n— Modificar el presupuesto de un club.  \n— Dar de baja un jugador del club.  \n— Dar de baja un entrenador del club.  \n— Listar jugadores de un club con posibilidad de filtrar por una de las propiedades  \n(por ejemplo nombre) y con paginación.\n\n**Extra:** Get Club con detalles del club, jugadores y entrenadores"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}